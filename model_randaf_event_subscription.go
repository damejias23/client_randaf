/*
Nrandaf_EventExposure

RANDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package randaf

import (
	"encoding/json"
)

// RandafEventSubscription Represents an individual event subscription resource on RANDAF
type RandafEventSubscription struct {
	EventRequest RandafEvent `json:"eventRequest"`
	// String providing an URI formatted according to RFC 3986.
	EventNotifyUri string `json:"eventNotifyUri"`
	Options *RandafEventMode `json:"options,omitempty"`
	TgtUe *TargetUeInformation `json:"tgtUe,omitempty"`
}

// NewRandafEventSubscription instantiates a new RandafEventSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRandafEventSubscription(eventRequest RandafEvent, eventNotifyUri string) *RandafEventSubscription {
	this := RandafEventSubscription{}
	this.EventRequest = eventRequest
	this.EventNotifyUri = eventNotifyUri
	return &this
}

// NewRandafEventSubscriptionWithDefaults instantiates a new RandafEventSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRandafEventSubscriptionWithDefaults() *RandafEventSubscription {
	this := RandafEventSubscription{}
	return &this
}

// GetEventRequest returns the EventRequest field value
func (o *RandafEventSubscription) GetEventRequest() RandafEvent {
	if o == nil {
		var ret RandafEvent
		return ret
	}

	return o.EventRequest
}

// GetEventRequestOk returns a tuple with the EventRequest field value
// and a boolean to check if the value has been set.
func (o *RandafEventSubscription) GetEventRequestOk() (*RandafEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventRequest, true
}

// SetEventRequest sets field value
func (o *RandafEventSubscription) SetEventRequest(v RandafEvent) {
	o.EventRequest = v
}

// GetEventNotifyUri returns the EventNotifyUri field value
func (o *RandafEventSubscription) GetEventNotifyUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventNotifyUri
}

// GetEventNotifyUriOk returns a tuple with the EventNotifyUri field value
// and a boolean to check if the value has been set.
func (o *RandafEventSubscription) GetEventNotifyUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventNotifyUri, true
}

// SetEventNotifyUri sets field value
func (o *RandafEventSubscription) SetEventNotifyUri(v string) {
	o.EventNotifyUri = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *RandafEventSubscription) GetOptions() RandafEventMode {
	if o == nil || o.Options == nil {
		var ret RandafEventMode
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RandafEventSubscription) GetOptionsOk() (*RandafEventMode, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *RandafEventSubscription) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given RandafEventMode and assigns it to the Options field.
func (o *RandafEventSubscription) SetOptions(v RandafEventMode) {
	o.Options = &v
}

// GetTgtUe returns the TgtUe field value if set, zero value otherwise.
func (o *RandafEventSubscription) GetTgtUe() TargetUeInformation {
	if o == nil || o.TgtUe == nil {
		var ret TargetUeInformation
		return ret
	}
	return *o.TgtUe
}

// GetTgtUeOk returns a tuple with the TgtUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RandafEventSubscription) GetTgtUeOk() (*TargetUeInformation, bool) {
	if o == nil || o.TgtUe == nil {
		return nil, false
	}
	return o.TgtUe, true
}

// HasTgtUe returns a boolean if a field has been set.
func (o *RandafEventSubscription) HasTgtUe() bool {
	if o != nil && o.TgtUe != nil {
		return true
	}

	return false
}

// SetTgtUe gets a reference to the given TargetUeInformation and assigns it to the TgtUe field.
func (o *RandafEventSubscription) SetTgtUe(v TargetUeInformation) {
	o.TgtUe = &v
}

func (o RandafEventSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["eventRequest"] = o.EventRequest
	}
	if true {
		toSerialize["eventNotifyUri"] = o.EventNotifyUri
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.TgtUe != nil {
		toSerialize["tgtUe"] = o.TgtUe
	}
	return json.Marshal(toSerialize)
}

type NullableRandafEventSubscription struct {
	value *RandafEventSubscription
	isSet bool
}

func (v NullableRandafEventSubscription) Get() *RandafEventSubscription {
	return v.value
}

func (v *NullableRandafEventSubscription) Set(val *RandafEventSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableRandafEventSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableRandafEventSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRandafEventSubscription(val *RandafEventSubscription) *NullableRandafEventSubscription {
	return &NullableRandafEventSubscription{value: val, isSet: true}
}

func (v NullableRandafEventSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRandafEventSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


