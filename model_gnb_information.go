/*
Nrandaf_EventExposure

RANDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package randaf

import (
	"encoding/json"
)

// GnbInformation Represents load level information of a given NF instance.
type GnbInformation struct {
	// Cell identifier to which the UE is connected 
	CellId *int32 `json:"cell_id,omitempty"`
	// PLMN indicator
	Plmn *string `json:"plmn,omitempty"`
	// Status indicator
	Status *string `json:"status,omitempty"`
	// Status timestamp indicator
	StatusTimestamp *string `json:"status_timestamp,omitempty"`
}

// NewGnbInformation instantiates a new GnbInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGnbInformation() *GnbInformation {
	this := GnbInformation{}
	return &this
}

// NewGnbInformationWithDefaults instantiates a new GnbInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGnbInformationWithDefaults() *GnbInformation {
	this := GnbInformation{}
	return &this
}

// GetCellId returns the CellId field value if set, zero value otherwise.
func (o *GnbInformation) GetCellId() int32 {
	if o == nil || o.CellId == nil {
		var ret int32
		return ret
	}
	return *o.CellId
}

// GetCellIdOk returns a tuple with the CellId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbInformation) GetCellIdOk() (*int32, bool) {
	if o == nil || o.CellId == nil {
		return nil, false
	}
	return o.CellId, true
}

// HasCellId returns a boolean if a field has been set.
func (o *GnbInformation) HasCellId() bool {
	if o != nil && o.CellId != nil {
		return true
	}

	return false
}

// SetCellId gets a reference to the given int32 and assigns it to the CellId field.
func (o *GnbInformation) SetCellId(v int32) {
	o.CellId = &v
}

// GetPlmn returns the Plmn field value if set, zero value otherwise.
func (o *GnbInformation) GetPlmn() string {
	if o == nil || o.Plmn == nil {
		var ret string
		return ret
	}
	return *o.Plmn
}

// GetPlmnOk returns a tuple with the Plmn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbInformation) GetPlmnOk() (*string, bool) {
	if o == nil || o.Plmn == nil {
		return nil, false
	}
	return o.Plmn, true
}

// HasPlmn returns a boolean if a field has been set.
func (o *GnbInformation) HasPlmn() bool {
	if o != nil && o.Plmn != nil {
		return true
	}

	return false
}

// SetPlmn gets a reference to the given string and assigns it to the Plmn field.
func (o *GnbInformation) SetPlmn(v string) {
	o.Plmn = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GnbInformation) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbInformation) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GnbInformation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GnbInformation) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTimestamp returns the StatusTimestamp field value if set, zero value otherwise.
func (o *GnbInformation) GetStatusTimestamp() string {
	if o == nil || o.StatusTimestamp == nil {
		var ret string
		return ret
	}
	return *o.StatusTimestamp
}

// GetStatusTimestampOk returns a tuple with the StatusTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbInformation) GetStatusTimestampOk() (*string, bool) {
	if o == nil || o.StatusTimestamp == nil {
		return nil, false
	}
	return o.StatusTimestamp, true
}

// HasStatusTimestamp returns a boolean if a field has been set.
func (o *GnbInformation) HasStatusTimestamp() bool {
	if o != nil && o.StatusTimestamp != nil {
		return true
	}

	return false
}

// SetStatusTimestamp gets a reference to the given string and assigns it to the StatusTimestamp field.
func (o *GnbInformation) SetStatusTimestamp(v string) {
	o.StatusTimestamp = &v
}

func (o GnbInformation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CellId != nil {
		toSerialize["cell_id"] = o.CellId
	}
	if o.Plmn != nil {
		toSerialize["plmn"] = o.Plmn
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusTimestamp != nil {
		toSerialize["status_timestamp"] = o.StatusTimestamp
	}
	return json.Marshal(toSerialize)
}

type NullableGnbInformation struct {
	value *GnbInformation
	isSet bool
}

func (v NullableGnbInformation) Get() *GnbInformation {
	return v.value
}

func (v *NullableGnbInformation) Set(val *GnbInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableGnbInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableGnbInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGnbInformation(val *GnbInformation) *NullableGnbInformation {
	return &NullableGnbInformation{value: val, isSet: true}
}

func (v NullableGnbInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGnbInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


