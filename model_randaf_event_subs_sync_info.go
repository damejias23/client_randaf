/*
Nrandaf_EventExposure

RANDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package randaf

import (
	"encoding/json"
)

// RandafEventSubsSyncInfo RANDAF Event Subscriptions Information for synchronization
type RandafEventSubsSyncInfo struct {
	SubscriptionInfo RandafEventSubscriptionInfo `json:"subscriptionInfo"`
}

// NewRandafEventSubsSyncInfo instantiates a new RandafEventSubsSyncInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRandafEventSubsSyncInfo(subscriptionInfo RandafEventSubscriptionInfo) *RandafEventSubsSyncInfo {
	this := RandafEventSubsSyncInfo{}
	this.SubscriptionInfo = subscriptionInfo
	return &this
}

// NewRandafEventSubsSyncInfoWithDefaults instantiates a new RandafEventSubsSyncInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRandafEventSubsSyncInfoWithDefaults() *RandafEventSubsSyncInfo {
	this := RandafEventSubsSyncInfo{}
	return &this
}

// GetSubscriptionInfo returns the SubscriptionInfo field value
func (o *RandafEventSubsSyncInfo) GetSubscriptionInfo() RandafEventSubscriptionInfo {
	if o == nil {
		var ret RandafEventSubscriptionInfo
		return ret
	}

	return o.SubscriptionInfo
}

// GetSubscriptionInfoOk returns a tuple with the SubscriptionInfo field value
// and a boolean to check if the value has been set.
func (o *RandafEventSubsSyncInfo) GetSubscriptionInfoOk() (*RandafEventSubscriptionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionInfo, true
}

// SetSubscriptionInfo sets field value
func (o *RandafEventSubsSyncInfo) SetSubscriptionInfo(v RandafEventSubscriptionInfo) {
	o.SubscriptionInfo = v
}

func (o RandafEventSubsSyncInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscriptionInfo"] = o.SubscriptionInfo
	}
	return json.Marshal(toSerialize)
}

type NullableRandafEventSubsSyncInfo struct {
	value *RandafEventSubsSyncInfo
	isSet bool
}

func (v NullableRandafEventSubsSyncInfo) Get() *RandafEventSubsSyncInfo {
	return v.value
}

func (v *NullableRandafEventSubsSyncInfo) Set(val *RandafEventSubsSyncInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRandafEventSubsSyncInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRandafEventSubsSyncInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRandafEventSubsSyncInfo(val *RandafEventSubsSyncInfo) *NullableRandafEventSubsSyncInfo {
	return &NullableRandafEventSubsSyncInfo{value: val, isSet: true}
}

func (v NullableRandafEventSubsSyncInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRandafEventSubsSyncInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


