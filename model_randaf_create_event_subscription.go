/*
Nrandaf_EventExposure

RANDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package randaf

import (
	"encoding/json"
)

// RandafCreateEventSubscription Data within a create RANDAF event subscription request
type RandafCreateEventSubscription struct {
	Subscription RandafEventSubscription `json:"subscription"`
}

// NewRandafCreateEventSubscription instantiates a new RandafCreateEventSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRandafCreateEventSubscription(subscription RandafEventSubscription) *RandafCreateEventSubscription {
	this := RandafCreateEventSubscription{}
	this.Subscription = subscription
	return &this
}

// NewRandafCreateEventSubscriptionWithDefaults instantiates a new RandafCreateEventSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRandafCreateEventSubscriptionWithDefaults() *RandafCreateEventSubscription {
	this := RandafCreateEventSubscription{}
	return &this
}

// GetSubscription returns the Subscription field value
func (o *RandafCreateEventSubscription) GetSubscription() RandafEventSubscription {
	if o == nil {
		var ret RandafEventSubscription
		return ret
	}

	return o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value
// and a boolean to check if the value has been set.
func (o *RandafCreateEventSubscription) GetSubscriptionOk() (*RandafEventSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscription, true
}

// SetSubscription sets field value
func (o *RandafCreateEventSubscription) SetSubscription(v RandafEventSubscription) {
	o.Subscription = v
}

func (o RandafCreateEventSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscription"] = o.Subscription
	}
	return json.Marshal(toSerialize)
}

type NullableRandafCreateEventSubscription struct {
	value *RandafCreateEventSubscription
	isSet bool
}

func (v NullableRandafCreateEventSubscription) Get() *RandafCreateEventSubscription {
	return v.value
}

func (v *NullableRandafCreateEventSubscription) Set(val *RandafCreateEventSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableRandafCreateEventSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableRandafCreateEventSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRandafCreateEventSubscription(val *RandafCreateEventSubscription) *NullableRandafCreateEventSubscription {
	return &NullableRandafCreateEventSubscription{value: val, isSet: true}
}

func (v NullableRandafCreateEventSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRandafCreateEventSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


